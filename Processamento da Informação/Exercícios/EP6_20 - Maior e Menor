{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"private_outputs":true,"provenance":[],"authorship_tag":"ABX9TyMNEhpbYkDb1WdTHIJAyZAH"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"A9dHzu_8IcJV"},"outputs":[],"source":["# Inicialização da matriz de tamanho 3x3\n","matriz = [[0 for _ in range(3)] for _ in range(3)]\n","\n","# Leitura dos elementos da matriz\n","for i in range(3):\n","    for j in range(3):\n","        matriz[i][j] = int(input())\n","\n","# Inicialização das variáveis para o menor e maior valor\n","menor_valor = matriz[0][0]\n","maior_valor = matriz[0][0]\n","posicao_menor = (0, 0)\n","posicao_maior = (0, 0)\n","\n","# Percorre a matriz para encontrar o menor e maior valor e suas posições\n","for i in range(3):\n","    for j in range(3):\n","        if matriz[i][j] < menor_valor:\n","            menor_valor = matriz[i][j]\n","            posicao_menor = (i, j)\n","        if matriz[i][j] > maior_valor:\n","            maior_valor = matriz[i][j]\n","            posicao_maior = (i, j)\n","\n","# Impressão dos resultados\n","print(f\"Maior: {maior_valor}\")\n","print(f\"Posicao (maior): {posicao_maior[0]} linha e {posicao_maior[1]} coluna\")\n","print(f\"Menor: {menor_valor}\")\n","print(f\"Posicao (menor): {posicao_menor[0]} linha e {posicao_menor[1]} coluna\")\n","\n","# Impressão da matriz\n","for i in range(3):\n","    for j in range(3):\n","        print(matriz[i][j], end=\" \")\n","    print()  # Pula para a próxima linha após imprimir todos os elementos da linha atual"]}]}