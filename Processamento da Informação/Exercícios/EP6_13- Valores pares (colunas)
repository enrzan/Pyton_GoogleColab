{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"private_outputs":true,"provenance":[],"authorship_tag":"ABX9TyOD9MDFhu+GgXEtzqOu7Ntk"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"jfKqtewcCLbE"},"outputs":[],"source":["def criar_matriz_pares(n_linhas, n_colunas):\n","    # Inicializa a matriz vazia\n","    matriz = [[0] * n_colunas for _ in range(n_linhas)]\n","\n","    # Variável para armazenar o próximo número par\n","    par_atual = 0\n","\n","    # Preenche a matriz coluna por coluna\n","    for coluna in range(n_colunas):\n","        for linha in range(n_linhas):\n","            matriz[linha][coluna] = par_atual\n","            par_atual += 2  # Incrementa para o próximo número par\n","\n","    return matriz\n","\n","def imprimir_matriz(matriz, n_linhas, n_colunas):\n","    for linha in range(n_linhas):\n","        for coluna in range(n_colunas):\n","            # Imprime cada elemento seguido por um espaço, sem usar in\n","            print(matriz[linha][coluna], end=\" \" if coluna < n_colunas - 1 else \"\")\n","        print()  # Nova linha após cada linha da matriz\n","\n","# Solicita ao usuário a quantidade de linhas e colunas\n","n_linhas = int(input(\"Digite o número de linhas: \"))\n","n_colunas = int(input(\"Digite o número de colunas: \"))\n","\n","# Cria e imprime a matriz\n","matriz = criar_matriz_pares(n_linhas, n_colunas)\n","imprimir_matriz(matriz, n_linhas, n_colunas)"]}]}