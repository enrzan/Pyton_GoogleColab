{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"private_outputs":true,"provenance":[],"authorship_tag":"ABX9TyNRzQluxzuAhiOiXHH5+N6l"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["n = int(input())\n","v = []\n","for _ in range(n):\n","    a = int(input())\n","    v.append(a)\n","\n","print(v)\n","\n","def verificar_simetria(v, n):\n","    for i in range(n // 2):\n","        if v[i] != v[n - i - 1]:\n","            return \"NAO\"\n","    return \"SIM\"\n","\n","resultado = verificar_simetria(v, n)\n","print(resultado)"],"metadata":{"id":"rQOuo_wkg-1z"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Outra forma de ser feito\n","\n","n = int(input())\n","v = [0] * n\n","for i in range(n):\n","    v[i] = int(input())\n","def verificar_simetria(v, n):\n","    for i in range(n // 2):\n","        if v[i] != v[n - i - 1]:\n","            return \"NAO\"\n","    return \"SIM\"\n","resultado = verificar_simetria(v, n)\n","print(resultado)"],"metadata":{"id":"U7hV7TCIh5cQ"},"execution_count":null,"outputs":[]}]}