{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"private_outputs":true,"provenance":[],"authorship_tag":"ABX9TyMMVHbpOxEb1gAz/1E55g+r"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"gmVqOlp_QyB0"},"outputs":[],"source":["# Leitura da dimensão da matriz\n","n = int(input())\n","\n","# Inicialização da matriz de tamanho n x n\n","matriz = [[0 for _ in range(n)] for _ in range(n)]\n","\n","# Leitura dos elementos da matriz\n","for i in range(n):\n","    linha = input().split()\n","    for j in range(n):\n","        matriz[i][j] = int(linha[j])\n","\n","# Inicialização da matriz dobrada de tamanho (n/2) x (n/2)\n","nova_dimensao = n // 2\n","matriz_dobrada = [[0 for _ in range(nova_dimensao)] for _ in range(nova_dimensao)]\n","\n","# Cálculo da matriz dobrada\n","for i in range(nova_dimensao):\n","    for j in range(nova_dimensao):\n","        matriz_dobrada[i][j] = (\n","            matriz[i][j] + matriz[i][n-j-1] +\n","            matriz[n-i-1][j] + matriz[n-i-1][n-j-1]\n","        )\n","\n","# Impressão da matriz dobrada\n","for i in range(nova_dimensao):\n","    for j in range(nova_dimensao):\n","        print(matriz_dobrada[i][j], end=\" \")\n","    print()  # Pula para a próxima linha após imprimir todos os elementos da linha atual"]}]}