{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"private_outputs":true,"provenance":[],"authorship_tag":"ABX9TyN+Lf8kfLqkY3JvoGj6TJox"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"QmN_WlG3cMrG"},"outputs":[],"source":["def leiaMatrizCSV(nome_arquivo):\n","    matriz = []\n","    arquivo = open(nome_arquivo, 'r')\n","    linha = arquivo.readline()\n","    while linha:\n","        # Remove espaços e quebras de linha manualmente\n","        inicio = 0\n","        fim = len(linha)\n","        while inicio < fim and (linha[inicio] == ' ' or linha[inicio] == '\\t' or linha[inicio] == '\\n'):\n","            inicio += 1\n","        while fim > inicio and (linha[fim - 1] == ' ' or linha[fim - 1] == '\\t' or linha[fim - 1] == '\\n'):\n","            fim -= 1\n","\n","        # Divide a linha em elementos\n","        elementos = []\n","        elemento = ''\n","        for i in range(inicio, fim):\n","            if linha[i] == ',':\n","                # Adiciona o elemento à lista manualmente\n","                novo_elementos = [0] * (len(elementos) + 1)\n","                for j in range(len(elementos)):\n","                    novo_elementos[j] = elementos[j]\n","                novo_elementos[len(elementos)] = int(elemento)\n","                elementos = novo_elementos\n","                elemento = ''\n","            else:\n","                elemento += linha[i]\n","        if elemento:\n","            # Adiciona o último elemento à lista\n","            novo_elementos = [0] * (len(elementos) + 1)\n","            for j in range(len(elementos)):\n","                novo_elementos[j] = elementos[j]\n","            novo_elementos[len(elementos)] = int(elemento)\n","            elementos = novo_elementos\n","\n","        # Adiciona a linha à matriz manualmente\n","        nova_linha = [0] * len(elementos)\n","        for i in range(len(elementos)):\n","            nova_linha[i] = elementos[i]\n","        matriz_nova = [None] * (len(matriz) + 1)\n","        for i in range(len(matriz)):\n","            matriz_nova[i] = matriz[i]\n","        matriz_nova[len(matriz)] = nova_linha\n","        matriz = matriz_nova\n","\n","        linha = arquivo.readline()\n","    # Fecha o arquivo manualmente\n","    arquivo = None\n","    return matriz\n","\n","def multiplica_matrizes(matrizA, matrizB):\n","    num_linhas_A = len(matrizA)\n","    num_colunas_A = len(matrizA[0])\n","    num_linhas_B = len(matrizB)\n","    num_colunas_B = len(matrizB[0])\n","\n","    # Verifica se as matrizes podem ser multiplicadas\n","    if num_colunas_A != num_linhas_B:\n","        raise ValueError(\"O número de colunas da matriz A deve ser igual ao número de linhas da matriz B.\")\n","\n","    # Inicializa a matriz resultado com zeros\n","    matriz_resultante = [[0 for _ in range(num_colunas_B)] for _ in range(num_linhas_A)]\n","\n","    # Multiplica as matrizes\n","    for i in range(num_linhas_A):\n","        for j in range(num_colunas_B):\n","            for k in range(num_colunas_A):\n","                matriz_resultante[i][j] += matrizA[i][k] * matrizB[k][j]\n","\n","    return matriz_resultante\n","\n","def imprime_matriz(nome_arquivo, matriz):\n","    print(nome_arquivo)\n","    for i in range(len(matriz)):\n","        linha_texto = ''\n","        linha = matriz[i]\n","        for j in range(len(linha)):\n","            linha_texto += str(linha[j])\n","            if j < len(linha) - 1:\n","                linha_texto += ' '\n","        print(linha_texto)\n","\n","def main():\n","    # Lê os nomes dos arquivos das matrizes\n","    nome_arquivo_A = ''\n","    nome_arquivo_B = ''\n","    nome_arquivo_A = input()\n","    nome_arquivo_B = input()\n","\n","    # Lê as matrizes dos arquivos\n","    matrizA = leiaMatrizCSV(nome_arquivo_A)\n","    matrizB = leiaMatrizCSV(nome_arquivo_B)\n","\n","    # Imprime as matrizes lidas\n","    imprime_matriz(nome_arquivo_A, matrizA)\n","    print()\n","    imprime_matriz(nome_arquivo_B, matrizB)\n","    print()\n","\n","    # Calcula a matriz resultante da multiplicação\n","    matriz_resultante = multiplica_matrizes(matrizA, matrizB)\n","\n","    # Imprime a matriz resultante\n","    print(\"Matriz Resultante\")\n","    imprime_matriz(\"\", matriz_resultante)\n","\n","if __name__ == \"__main__\":\n","    main()"]}]}