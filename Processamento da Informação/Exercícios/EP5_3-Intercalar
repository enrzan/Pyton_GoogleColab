{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"private_outputs":true,"provenance":[],"authorship_tag":"ABX9TyMaO4Pk/S9RMP4F4OTH3aZl"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"JJgmWrlt0j9h"},"outputs":[],"source":["v1a = int(input())\n","v1b = int(input())\n","v1c = int(input())\n","v1d = int(input())\n","v1e = int(input())\n","v2a = int(input())\n","v2b = int(input())\n","v2c = int(input())\n","v2d = int(input())\n","v2e = int(input())\n","\n","v1 = [v1a, v1b, v1c, v1d, v1e]\n","v2 = [v2a, v2b, v2c, v2d, v2e]\n","\n","print(v1)\n","print(v2)\n","\n","def intercalar(v1, v2):\n","    v3 = []\n","    for i in range(len(v1)):\n","        v3.append(v1[i])\n","        v3.append(v2[i])\n","    return v3\n","\n","v3 = intercalar(v1, v2)\n","print(v3)"]},{"cell_type":"code","source":["# Entrada dos valores\n","v1a = int(input())\n","v1b = int(input())\n","v1c = int(input())\n","v1d = int(input())\n","v1e = int(input())\n","v2a = int(input())\n","v2b = int(input())\n","v2c = int(input())\n","v2d = int(input())\n","v2e = int(input())\n","\n","# Criação das listas v1 e v2\n","v1 = [v1a, v1b, v1c, v1d, v1e]\n","v2 = [v2a, v2b, v2c, v2d, v2e]\n","\n","# Impressão das listas v1 e v2\n","print(\"v1:\", v1)\n","print(\"v2:\", v2)\n","\n","# Definição da função intercalar\n","def intercalar(v1, v2):\n","    v3 = [0] * (len(v1) + len(v2))  # Cria uma lista v3 com o tamanho necessário\n","    for i in range(len(v1)):\n","        v3[2 * i] = v1[i]  # Coloca o elemento de v1 na posição correta\n","        v3[2 * i + 1] = v2[i]  # Coloca o elemento de v2 na posição correta\n","    return v3\n","\n","# Chamada da função intercalar e impressão do resultado\n","v3 = intercalar(v1, v2)\n","print(\"v3:\", v3)"],"metadata":{"id":"eIor6oUH3rhs"},"execution_count":null,"outputs":[]}]}