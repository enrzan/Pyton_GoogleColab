{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"private_outputs":true,"provenance":[],"authorship_tag":"ABX9TyOeZ5jspSXMaTR5eTYRmluI"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"hxALXJJWbD0I"},"outputs":[],"source":["def ler_matriz(linhas, colunas):\n","    matriz = [[0] * colunas for _ in range(linhas)]\n","    for i in range(linhas):\n","        linha = input().split()\n","        for j in range(colunas):\n","            matriz[i][j] = int(linha[j])\n","    return matriz\n","def multiplicar_matrizes(A, B, linhas_A, colunas_A, colunas_B):\n","    resultado = [[0] * colunas_B for _ in range(linhas_A)]\n","\n","    for i in range(linhas_A):\n","        for j in range(colunas_B):\n","            for k in range(colunas_A):\n","                resultado[i][j] += A[i][k] * B[k][j]\n","    return resultado\n","def multiplicar_por_escalar(matriz, escalar):\n","    linhas = len(matriz)\n","    colunas = len(matriz[0])\n","    for i in range(linhas):\n","        for j in range(colunas):\n","            matriz[i][j] *= escalar\n","    return matriz\n","\n","def imprimir_matriz(matriz):\n","    linhas = len(matriz)\n","    colunas = len(matriz[0])\n","    for i in range(linhas):\n","        linha = \"\"\n","        for j in range(colunas):\n","            linha += str(matriz[i][j])\n","            if j < colunas - 1:\n","                linha += \" \"\n","        print(linha)\n","\n","def main():\n","    linhas_A = int(input())\n","    colunas_A = int(input())\n","    A = ler_matriz(linhas_A, colunas_A)\n","    linhas_B = int(input())\n","    colunas_B = int(input())\n","    B = ler_matriz(linhas_B, colunas_B)\n","\n","    if colunas_A != linhas_B:\n","        return\n","    resultado = multiplicar_matrizes(A, B, linhas_A, colunas_A, colunas_B)\n","    resultado = multiplicar_por_escalar(resultado, 3)\n","    imprimir_matriz(resultado)\n","\n","if __name__ == \"__main__\":\n","    main()"]}]}