{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"private_outputs":true,"provenance":[],"authorship_tag":"ABX9TyMl0LoUqJxNpXdR19JvTtVg"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"wurfV0PlGkvf"},"outputs":[],"source":["# Leitura do número de linhas e colunas\n","n_linhas = int(input())\n","n_colunas = int(input())\n","\n","# Inicialização da matriz\n","matriz = [[0 for c in range(n_colunas)] for l in range(n_linhas)]\n","\n","# Leitura dos elementos da matriz\n","for linha in range(n_linhas):\n","    itens_linha = input().split(\" \")\n","    for coluna in range(n_colunas):\n","        matriz[linha][coluna] = int(itens_linha[coluna])\n","\n","# Multiplicação dos elementos das colunas de índice ímpar por 3\n","for linha in range(n_linhas):\n","    for coluna in range(n_colunas):\n","        if coluna % 2 == 1:  # Verifica se o índice da coluna é ímpar\n","            matriz[linha][coluna] *= 3\n","\n","# Impressão da matriz resultante\n","for linha in range(n_linhas):\n","    for coluna in range(n_colunas):\n","        print(matriz[linha][coluna], end=\" \")\n","    print()  # Pula para a próxima linha após imprimir todos os elementos da linha atual"]}]}