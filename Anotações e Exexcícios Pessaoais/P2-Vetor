{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"private_outputs":true,"provenance":[],"authorship_tag":"ABX9TyMxY85xg+7zUIJsLpARGg4/"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["valores = [12, 45, 7, 32, 18, 90] # Define os \"valores\", no formato [a, b, c, ..., z]\n","limite = 30 # Define o limite da função como \"n\"\n","\n","def soma_condicional(valores, limite): # Define a função \"soma_condicional\"\n","    soma = 0 # A soma se inicia como igual a 0\n","    for numero in valores:\n","        if numero > limite: # Se o número do vetor é maior que o valor, o vetor é adicionada à soma\n","            soma += numero\n","    return soma # Retorna o valor da função\n","\n","print(soma_condicional(valores, limite)) #Imprime o resoltado da \"soma_condicional\", (No exemplo, soma_condicional(valores, limite) = 167)"],"metadata":{"id":"x_7BJcHKGSCb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["notas = [85, 67, 90, 75, 92, 80, 88] # Define os \"notas\", no formato [a, b, c, ..., z]\n","valor_min, valor_max = 70, 90 # Define os \"valor_min, valor_max\", no formato: min, max\n","\n","def contar_intervalo(vetor, valor_min, valor_max): # Define a função \"contar_intervalo\"\n","    contador = 0 # O contador se inicia como sendo igual a 0\n","    for numero in vetor:\n","        if valor_min <= numero <= valor_max: # Se o número está entre os valores de máximo e mínimo é adicionado 1 ao contador\n","            contador += 1\n","    return contador # Retorna o valor da função\n","\n","print(contar_intervalo(notas, valor_min, valor_max)) #Imprime o resoltado da \"contar_intervalo\", (No exemplo, contar_intervalo(notas, valor_min, valor_max) = 5)"],"metadata":{"id":"GtPwyDjNHkmx"},"execution_count":null,"outputs":[]}]}